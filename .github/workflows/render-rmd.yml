name: Render Quarto Vignettes

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  render:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensure we have the previous commit for git diff

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: Install Quarto
        run: |
          curl -sSL https://github.com/quarto-dev/quarto-cli/releases/download/v1.5.56/quarto-1.5.56-linux-amd64.deb -o quarto.deb
          sudo dpkg -i quarto.deb
          sudo apt-get install -f

      - name: Install Quarto webr Extension
        run: |
          quarto add coatless/quarto-webr --no-prompt

      - name: Install R Packages (for Quarto Rendering)
        run: |
          R -e "install.packages(c('knitr', 'rmarkdown', 'dplyr', 'ggplot2', 'tidyr', 'openintro'), dependencies=TRUE)"

      - name: Verify R Package Installation
        run: |
          R -e "installed.packages()"

      - name: Find Modified Vignettes
        id: get_modified_files
        run: |
          git diff --name-only HEAD^ HEAD | grep '^vignettes/.*\.qmd$' > modified_files.txt || true
          if [ ! -s modified_files.txt ]; then
            echo "No vignettes modified. Skipping rendering."
            echo "SKIP_RENDER=true" >> $GITHUB_ENV
          else
            echo "Modified files found:" && cat modified_files.txt
            echo "SKIP_RENDER=false" >> $GITHUB_ENV
          fi

      - name: Render Modified Vignettes
        if: ${{ env.SKIP_RENDER != 'true' }}  # Checking SKIP_RENDER correctly
        run: |
          mkdir -p rendered_vignettes
          while IFS= read -r file; do
            if [[ -n "$file" ]]; then
              echo "Rendering $file..."
              quarto render "$file" --output-dir rendered_vignettes
              if [ $? -ne 0 ]; then
                echo "Failed to render $file"
                exit 1
              fi
            fi
          done < modified_files.txt
        env:
          QUARTO_LOG_LEVEL: DEBUG

      - name: Deploy Rendered Vignettes to GitHub Pages
        if: ${{ github.event_name != 'pull_request' && env.SKIP_RENDER != 'true' && job.status == 'success' }}  # Correct usage of job.status
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: rendered_vignettes
          clean: true

      - name: Notify on Failure
        if: failure()
        run: |
          echo "::error:: Vignette rendering failed! Check logs in GitHub Actions."
